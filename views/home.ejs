<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <title>Trang ch·ªß tuquanao</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 30px;
      background: #f9f9f9;
    }

    h1 {
      text-align: center;
      color: #333;
      margin-bottom: 10px;
    }

    .summary {
      text-align: center;
      margin-bottom: 20px;
      color: #666;
      font-size: 16px;
    }

    .search-box {
      text-align: center;
      margin-bottom: 30px;
    }

    .search-box input {
      padding: 8px 12px;
      font-size: 16px;
      width: 200px;
      margin: 0 5px;
      border-radius: 6px;
      border: 1px solid #ccc;
    }

    .grid-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 24px;
      max-width: 1000px;
      margin: 0 auto;
    }

    .image-box {
      background: #fff;
      padding: 12px;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
      text-align: center;
    }

    .image-box:hover {
      transform: scale(1.03);
      box-shadow: 0 8px 20px rgba(0,0,0,0.15);
    }

    .image-box img {
      width: 100%;
      height: auto;
      border-radius: 10px;
      object-fit: cover;
    }

    .image-box .name {
      margin-top: 10px;
      font-weight: bold;
      color: #333;
    }

    .image-box .type, .image-box .color {
      font-size: 13px;
      color: #777;
    }

    .broken-box {
      width: 100%;
      height: 200px;
      background: #eee;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 20px;
      color: red;
      border-radius: 10px;
    }

    .hidden {
      display: none !important;
    }

    .pagination {
      text-align: center;
      margin-top: 30px;
    }

    .pagination button {
      margin: 0 4px;
      padding: 6px 12px;
      border-radius: 4px;
      border: none;
      background: #333;
      color: white;
      cursor: pointer;
    }

    .pagination button.active {
      background: #007bff;
    }
  </style>
</head>
<body>
  <h1>üß• Danh s√°ch h√¨nh ·∫£nh t·ª´ DB</h1>
  <div class="summary">T·ªïng s·ªë m·ª•c: <strong><%= images.length %></strong></div>
<div style="margin-bottom: 20px;">
  <a href="/add-image" style="
      background-color: #4CAF50;
      color: white;
      padding: 10px 20px;
      text-decoration: none;
      border-radius: 8px;
      font-weight: bold;
  ">‚ûï Th√™m ·∫£nh m·ªõi</a>
</div>

  <div class="search-box">
    <input type="text" id="nameInput" placeholder="üîç T√™n...">
    <input type="text" id="typeInput" placeholder="üß© Lo·∫°i...">
    <input type="text" id="colorInput" placeholder="üé® M√†u...">
  </div>

  <div class="grid-container" id="imageContainer"></div>

  <div class="pagination" id="pagination"></div>

  <script id="data-json" type="application/json">
    <%- JSON.stringify(images) %>
  </script>

  <script>
    const allImages = JSON.parse(document.getElementById('data-json').textContent);
    const nameInput = document.getElementById('nameInput');
    const typeInput = document.getElementById('typeInput');
    const colorInput = document.getElementById('colorInput');
    const container = document.getElementById('imageContainer');
    const pagination = document.getElementById('pagination');
    const perPage = 10;
    let currentPage = 1;

    function renderImages(images) {
      container.innerHTML = '';
      const start = (currentPage - 1) * perPage;
      const end = start + perPage;
      const pageImages = images.slice(start, end);

      pageImages.forEach(image => {
        const box = document.createElement('div');
        box.className = 'image-box';

        if (image.embedUrl) {
          box.innerHTML = `
            <img src="${image.embedUrl}" alt="${image.name}" onerror="this.style.border='3px solid red'">
            <div class="name">${image.name}</div>
            <div class="type">${image.type || ''}</div>
            <div class="color">${image.color || ''}</div>
          `;
        } else {
          box.innerHTML = `
            <div class="broken-box">‚ùå Link l·ªói</div>
            <div class="name">${image.name}</div>
            <div class="type">${image.type || ''}</div>
            <div class="color">${image.color || ''}</div>
          `;
        }

        container.appendChild(box);
      });
    }

    function renderPagination(images) {
      pagination.innerHTML = '';
      const totalPages = Math.ceil(images.length / perPage);

      for (let i = 1; i <= totalPages; i++) {
        const btn = document.createElement('button');
        btn.textContent = i;
        if (i === currentPage) btn.classList.add('active');
        btn.onclick = () => {
          currentPage = i;
          renderImages(filteredImages);
          renderPagination(filteredImages);
        };
        pagination.appendChild(btn);
      }
    }

    function filterImages() {
      const name = nameInput.value.trim().toLowerCase();
      const type = typeInput.value.trim().toLowerCase();
      const color = colorInput.value.trim().toLowerCase();

      return allImages.filter(img =>
        img.name.toLowerCase().includes(name) &&
        (img.type || '').toLowerCase().includes(type) &&
        (img.color || '').toLowerCase().includes(color)
      );
    }

    let filteredImages = filterImages();
    renderImages(filteredImages);
    renderPagination(filteredImages);

    [nameInput, typeInput, colorInput].forEach(input => {
      input.addEventListener('input', () => {
        currentPage = 1;
        filteredImages = filterImages();
        renderImages(filteredImages);
        renderPagination(filteredImages);
      });
    });
  </script>
</body>
</html>